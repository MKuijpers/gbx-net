<div class="display" style="@(JustifyContentRight ? "justify-content: right;" : "")">
    
@foreach (var type in Types)
{
    <div class="inherit-type">
        
        @if (Types[0] != type)
        {
            <div class="inherit-arrow"><i class="fa-solid fa-arrow-right"></i></div>
        }

        <div class="type @(type.Selected ? "selected" : "")" @onclick="async () => await TypeClickAsync(type)">@type.Type.Name</div>

    </div>
}

</div>

@code {
    [Parameter]
    public ImmutableArray<TypeModel> Types { get; set; }

    [Parameter]
    public bool Selectable { get; set; }

    [Parameter]
    public bool JustifyContentRight { get; set; }

    [Parameter]
    public EventCallback<TypeModel> OnTypeClick { get; set; }

    private async Task TypeClickAsync(TypeModel type)
    {
        if (Selectable)
        {
            type.Selected = !type.Selected;
        }

        await OnTypeClick.InvokeAsync();
    }
}

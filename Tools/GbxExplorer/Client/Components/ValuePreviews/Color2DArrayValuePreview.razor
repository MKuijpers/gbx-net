@using GBX.NET.Attributes
@using System.Drawing

@inject IJSRuntime JS

@inherits ValuePreview
@attribute [AppliesForType(typeof(Color[,]))]

@if (Value is not Color[,] color2dArray)
{
    <span style="color:gray">null</span>

    return;
}

@if (color2dArray.Length == 0)
{
    base.BuildRenderTree(__builder);
}
else
{
    <img src="@dataUrl" />
}

@code {
    private string? prevDataUrl;
    private string? dataUrl;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (Value is not Color[,] color2dArray)
        {
            return;
        }

        var byteArray = ColorUtilities.Color2dArrayToByteArray(color2dArray, out int width, out int height);

        dataUrl = await JS.InvokeAsync<string>("rgbaBufferToImage", byteArray, width, height);

        if (dataUrl != prevDataUrl) // I hate this hack so much man xd
        {
            StateHasChanged();
            prevDataUrl = dataUrl;
        }
    }
}
